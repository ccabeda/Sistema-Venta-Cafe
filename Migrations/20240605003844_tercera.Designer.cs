// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SistemaDeVentasCafe.Models;

#nullable disable

namespace SistemaDeVentasCafe.Migrations
{
    [DbContext(typeof(DbapiContext))]
    [Migration("20240605003844_tercera")]
    partial class tercera
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SistemaDeVentasCafe.Models.Cliente", b =>
                {
                    b.Property<int>("IdCliente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCliente"));

                    b.Property<string>("Apellido")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("CorreoElectronico")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("Dni")
                        .HasColumnType("int")
                        .HasColumnName("DNI");

                    b.Property<string>("Nombre")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("Telefono")
                        .HasColumnType("int");

                    b.HasKey("IdCliente")
                        .HasName("PK__CLIENTE__D59466421629B4E8");

                    b.ToTable("CLIENTE", (string)null);
                });

            modelBuilder.Entity("SistemaDeVentasCafe.Models.Cobranza", b =>
                {
                    b.Property<int>("IdCobranza")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCobranza"));

                    b.Property<string>("Descripcion")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<DateOnly?>("FechaDeCobro")
                        .HasColumnType("date")
                        .HasColumnName("fechaDeCobro");

                    b.Property<decimal?>("Importe")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<int?>("MedioDePago")
                        .HasColumnType("int");

                    b.Property<int?>("NumeroFactura")
                        .HasColumnType("int");

                    b.HasKey("IdCobranza")
                        .HasName("PK__COBRANZA__7B29BE86A8CEAEB7");

                    b.HasIndex("MedioDePago");

                    b.HasIndex("NumeroFactura");

                    b.ToTable("COBRANZA", (string)null);
                });

            modelBuilder.Entity("SistemaDeVentasCafe.Models.Factura", b =>
                {
                    b.Property<int>("IdFactura")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdFactura"));

                    b.Property<int?>("CantidadProductos")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<bool?>("EstadoPago")
                        .HasColumnType("bit");

                    b.Property<DateOnly?>("FechaFactura")
                        .HasColumnType("date");

                    b.Property<int>("IdCliente")
                        .HasColumnType("int");

                    b.Property<decimal?>("PrecioTotal")
                        .HasColumnType("decimal(10, 2)");

                    b.HasKey("IdFactura")
                        .HasName("PK__FACTURA__50E7BAF1153F5D44");

                    b.HasIndex("IdCliente");

                    b.ToTable("FACTURA", (string)null);
                });

            modelBuilder.Entity("SistemaDeVentasCafe.Models.Facturaproducto", b =>
                {
                    b.Property<int>("IdFacturaProductos")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdFacturaProductos"));

                    b.Property<int?>("CantidadDelProducto")
                        .HasColumnType("int");

                    b.Property<int>("IdFactura")
                        .HasColumnType("int");

                    b.Property<int>("IdProducto")
                        .HasColumnType("int");

                    b.HasKey("IdFacturaProductos")
                        .HasName("PK__FACTURAP__36F787A4DE48DE03");

                    b.HasIndex("IdFactura");

                    b.HasIndex("IdProducto");

                    b.ToTable("FACTURAPRODUCTOS", (string)null);
                });

            modelBuilder.Entity("SistemaDeVentasCafe.Models.Mediodepago", b =>
                {
                    b.Property<int>("IdMedioDePago")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdMedioDePago"));

                    b.Property<string>("Descripcion")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("descripcion");

                    b.HasKey("IdMedioDePago")
                        .HasName("PK__MEDIODEP__6B4A4BA22B848B08");

                    b.ToTable("MEDIODEPAGO", (string)null);
                });

            modelBuilder.Entity("SistemaDeVentasCafe.Models.Producto", b =>
                {
                    b.Property<int>("IdProducto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdProducto"));

                    b.Property<string>("Descripcion")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<DateOnly?>("FechaVencimiento")
                        .HasColumnType("date")
                        .HasColumnName("fechaVencimiento");

                    b.Property<int?>("NumeroDeLote")
                        .HasColumnType("int");

                    b.Property<decimal?>("PrecioVenta")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<int?>("StockActual")
                        .HasColumnType("int");

                    b.HasKey("IdProducto")
                        .HasName("PK__PRODUCTO__0988921094777190");

                    b.ToTable("PRODUCTO", (string)null);
                });

            modelBuilder.Entity("SistemaDeVentasCafe.Models.Cobranza", b =>
                {
                    b.HasOne("SistemaDeVentasCafe.Models.Mediodepago", "MedioDePagoNavigation")
                        .WithMany("Cobranzas")
                        .HasForeignKey("MedioDePago")
                        .HasConstraintName("FK_MEDIODEPAGO");

                    b.HasOne("SistemaDeVentasCafe.Models.Factura", "NumeroFacturaNavigation")
                        .WithMany("Cobranzas")
                        .HasForeignKey("NumeroFactura")
                        .HasConstraintName("FK_NUMEROFACTURA");

                    b.Navigation("MedioDePagoNavigation");

                    b.Navigation("NumeroFacturaNavigation");
                });

            modelBuilder.Entity("SistemaDeVentasCafe.Models.Factura", b =>
                {
                    b.HasOne("SistemaDeVentasCafe.Models.Cliente", "fCliente")
                        .WithMany("Facturas")
                        .HasForeignKey("IdCliente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_IDCLIENTE");

                    b.Navigation("fCliente");
                });

            modelBuilder.Entity("SistemaDeVentasCafe.Models.Facturaproducto", b =>
                {
                    b.HasOne("SistemaDeVentasCafe.Models.Factura", "fFactura")
                        .WithMany("Lista_De_Productos")
                        .HasForeignKey("IdFactura")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_IDFACTURA");

                    b.HasOne("SistemaDeVentasCafe.Models.Producto", "fProducto")
                        .WithMany("Facturaproductos")
                        .HasForeignKey("IdProducto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_IDPRODUCTO");

                    b.Navigation("fFactura");

                    b.Navigation("fProducto");
                });

            modelBuilder.Entity("SistemaDeVentasCafe.Models.Cliente", b =>
                {
                    b.Navigation("Facturas");
                });

            modelBuilder.Entity("SistemaDeVentasCafe.Models.Factura", b =>
                {
                    b.Navigation("Cobranzas");

                    b.Navigation("Lista_De_Productos");
                });

            modelBuilder.Entity("SistemaDeVentasCafe.Models.Mediodepago", b =>
                {
                    b.Navigation("Cobranzas");
                });

            modelBuilder.Entity("SistemaDeVentasCafe.Models.Producto", b =>
                {
                    b.Navigation("Facturaproductos");
                });
#pragma warning restore 612, 618
        }
    }
}
